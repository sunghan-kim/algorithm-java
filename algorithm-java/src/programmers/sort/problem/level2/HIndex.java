package programmers.sort.problem.level2;

import programmers.sort.problem.level2.solution.HIndex.DeveloperDK;
import programmers.sort.problem.level2.solution.HIndex.Jar100;

// https://programmers.co.kr/learn/courses/30/lessons/42747

/**
* 
* @author shkim
* 
* ##### H-Index #####
* 
* # 문제 설명
* 
* H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 
* 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 
* 위키백과1에 따르면, H-Index는 다음과 같이 구합니다.
* 
* 어떤 과학자가 발표한 논문 n편 중, 
* h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 
* h가 이 과학자의 H-Index입니다.
* 
* 어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 
* 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.
* 
* 
* # 제한 사항
* 
* - 과학자가 발표한 논문의 수는 1편 이상 1,000편 이하입니다.
* - 논문별 인용 횟수는 0회 이상 10,000회 이하입니다.
* 
* 
* # 입출력 예
* 
* (예시1)
* 
*   - citations : [3, 0, 6, 1, 5]
*   
*   - return : 3
*   
*   
* # 입출력 예 설명
* 
* 이 과학자가 발표한 논문의 수는 5편이고, 그중 3편의 논문은 3회 이상 인용되었습니다. 
* 그리고 나머지 2편의 논문은 3회 이하 인용되었기 때문에 이 과학자의 H-Index는 3입니다.
*   
*/

public class HIndex {

	public int solution(int[] citations) {
        int answer = 0;
        
        return answer;
    }
	
	public static void main(String[] args) {
		
		int[] citations = {3, 0, 6, 1, 5};
		
		int answer = 0;
		
		String show = "dk2"; // default, jar, dk1, dk2
		
		if (show.equals("default")) {
			
			HIndex hidx = new HIndex();
			
			answer = hidx.solution(citations);
			
		} else if (show.equals("jar")) {
			
			Jar100 jar = new Jar100();
			
			answer = jar.solution(citations);
			
		} else if (show.equals("dk1")) {
			
			DeveloperDK dk = new DeveloperDK();
			
			answer = dk.solution1(citations);
			
		} else if (show.equals("dk2")) {
			
			DeveloperDK dk = new DeveloperDK();
			
			answer = dk.solution2(citations);
			
		}
		
		System.out.println("answer : " + answer);
		
	}
	
}
